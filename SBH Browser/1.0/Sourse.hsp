//ブラウザの名前など
BrowserName="SBH Browser "
BrowserVersion="ver1.0.0"
BrowserBuildNumber="1"
BrowserBuildDay="2024/01/31"
BrowserPush="no"
//このサンプルはInternet Stroller Memoria 1.4.0.0及び1.5.2.0(開発途中版)で作成されたサンプルです
//初心者向けに設計されています

//弄るとブラウザの文字を変えられるよ
developer="[制作者の名前を入力]"//制作者の名前
text001="新規タブ"
text002="←"
text003="→"
text004="読込直し"
text005="URLへ移動"
text006="タブ追加(+)"
text007="タブ閉じる(-)"
text008="キャプチャ"
text011="ダウンロード"
text012="About"
text013="申し訳ありませんが、起動できませんでした。\n・PCが古い\n・ブラウザを置いている場所が悪い\n・容量がない"
text014=BrowserName+"\nは既に起動されているようです。\n\nつづけて起動/終了"
text021="閉じる"
text031="タブ複製"
title BrowserName+BrowserVersion+" - 起動中(初めての時は時間がかかります)"
screen 0, 1200,600
Mode="Normal"

//OSバージョン把握
 title BrowserName+BrowserVersion+" - Understanding OS Ver
 //Legacy
 if sysinfo(0) = "WindowsNT ver3.1" {OS = "Windows NT 3.1/Windows 3.1":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver3.5" {OS = "Windows NT 3.5":goto *CompatibleCaution}
 if sysinfo(0) = "Windows9X ver4.0" {OS = "Windows 95":goto *CompatibleCaution}
 if sysinfo(0) = "Windows9X ver4.10" {OS = "Windows 98":goto *CompatibleCaution}
 if sysinfo(0) = "Windows9X ver4.90" {OS = "Windows ME":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver5.0" {OS = "Windows 2000":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver5.1" {OS = "Windows XP":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver5.2" {OS = "Windows Server2003/ReactOS":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver6.0" {OS = "Windows Vista/Server2008":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver6.1" {OS = "Windows 7":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver6.2" {OS = "Windows 8":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver6.3" {OS = "Windows 8.1":goto *CompatibleCaution}
 //New
 goto *nexts//問題ないなら下へ、古すぎたら警告

*CompatibleCaution
dialog "WebView doesn't support "+OS+Compatibletext,2
end

*nexts
#include "shell32.as"//つかうやつ
#include "hspinet.as"
#include "mod_stbar.as"

//消すな
#include "core.hsp"

//バージョン把握用
#include "hspinet.as"
//ここからWebView開始
title BrowserName+BrowserVersion+" - WebView Setting"
//既定のURLは↓
DEF_URL = "https://www.google.com"

//弄らないほうがいいよ
#define global WV2Env_CreateWV2Ctrl           3
#define global WV2Ctrl_put_IsVisible          4
#define global WV2Ctrl_put_Bounds             6
#define global WV2Ctrl_GetParent             21
#define global WV2_PrintToPdf                80
#define global WV2_IsDownloadDialogOpen      90
#define global WV2_OpenDownloadDialog        91
#define global WV2_CloseDownloadDialog       92
#define global WV2NewWnd_get_Uri              3
#define global WV2NewWnd_put_NewWindow        4
#define global WV2NewWnd_put_Handled          6
#define global WV2NewWnd_GetDeferral          9
#define global WV2Deferral_Complete           3
#define global WV2Ctrl_Close                 24
#define global WV2Ctrl_get_CoreWebView2      25
#define global WV2_get_Source                 4
#define global WV2_Navigate                   5
#define global WM_SETFONT  0x0030
#define global TCM_GETITEMCOUNT  0x1304
#define global TCM_GETITEMA      0x1305
#define global TCM_INSERTITEMA   0x1307
#define global WV2_ExecuteScript             29
#define global WV2_CapturePreview            30
#define global WV2_Reload                    31
#define global WV2_get_CanGoBack             38
#define global WV2_get_CanGoForward          39
#define global WV2_get_GoBack                40
#define global WV2_get_GoForward             41
#define global WV2_add_NewWindowRequested    44
#define global WV2_del_NewWindowRequested    45
#define global WV2_add_DocumentTitleChanged  46
#define global WV2_del_DocumentTitleChanged  47
#define global WV2_get_DocumentTitle         48
#define global WV2_add_FullScrChanged        52
#define global TCM_DELETEITEM    0x1308
#define global TCM_GETCURSEL     0x130b
#define global TCM_SETCURSEL     0x130c
#define global TCM_HITTEST       0x130d
#define global TCM_SETITEMW      0x133d
#define global TCM_INSERTITEMW   0x133e
#define global WV2_add_NavigationCompleted   15
#define global WV2_del_NavigationCompleted   16
#define global WV2_del_FullScrChanged        53
#define global WV2_GetFullScreen             54
#define global WV2_OpenTaskManagerWindow     79
	WebView2_InitWnd 0
	hWnd0 = hwnd
	dim wndInfo, 7
	hMenu = CreateMenu()
	menuBuf(0) = text002, text003, text004, text005
	menuBuf(4) = text006, text031, text007, text008
	menuBuf(8) = text012, text011
	repeat length(menuBuf)//よくわからないなら弄るな！
		InsertMenu hMenu, -1, 0x400, 0x8000 + cnt, menuBuf(cnt)
	loop
	dim mi, 12 : mi = 48, 1 : mi(3) = 3
	SetMenu hWnd0, hMenu
	ldim lbCmd, length(menuBuf)
	lbCmd(0) = *CMD_BACK, *CMD_FORWARD,*CMD_RELOAD, *CMD_NAVIGATE
	lbCmd(4) = *CMD_NEW_TAB, *CMD_CLONE_TAB, *CMD_DEL_TAB, *CMD_CAPTURE
	lbCmd(8) = *ABOUT, *CMD_DOWNLOAD
	CreateWindowExA 0, "edit", 0, 0x56000080, 0, 0, 0, 0, hWnd0, 0, hinstance, 0
	hEditUrl = stat : sendmsg hEditUrl, WM_SETFONT, hFont, 1
	bufTmp = DEF_URL : SetWindowTextA hEditUrl, varptr(bufTmp)
	dim rc, 4 : dim tci, 7 : bAdd = 0 : bDel = 0
	CreateWindowExA 0, "SysTabControl32", 0, 0x56008468, 0, 0, 0, 0, hWnd0, 0, hinstance, 0
	hTab = stat : sendmsg hTab, WM_SETFONT, hFont, 1
	p1 = 0 << 16 : p1 |= 160 : sendmsg hTab, 0x1329, 0, p1
	pEnv = WebView2_CreateEnv()
	if ( pEnv == 0 ){ gsel 0, 1 : dialog text013,2, "FATAL":end}
	curCtrl = 0 : curView = 0

//イベント(戻るとか)用
	oncmd gosub *EVENT_TITLE,    0x9000
	oncmd gosub *EVENT_COMPLETE, 0x9001
	oncmd gosub *EVENT_FULLSCR,  0x9002
	oncmd gosub *EVENT_NEWWND,   0x9003
	oncmd gosub *EVENT_NEWWND2,  0x9004
	oncmd gosub *WM_SIZE,        0x0005
	oncmd gosub *WM_CLOSE,       0x0010
	oncmd gosub *WM_NOTIFY,      0x004E
	oncmd gosub *WM_COMMAND,     0x0111
	gosub *TAB_ADD//最初のタブ
	onexit *Exit
	title BrowserName+BrowserVersion+" - 起動完了"

//すでに起動されてる?
#include "kernel32.as"
#define ERROR_ALREADY_EXISTS $B7
	CreateMutex 0, 0, "BrowserOwnCheck"
	GetLastError
	if stat = ERROR_ALREADY_EXISTS {
		dialog text014, 3 , BrowserName
		if stat = 7 {end}
	}
	//起動完了
    title ""
    gsel 0, 1
    stbar_ini
    gosub *WM_STBAR
	stop

//以降 "*" 処理
*MENU_UPDATE//戻る・進むをグレーにするか押せるようにするか
	gosub *EVENT_URL
	mi(1) = 1
	if ( CCall2(dpCtrl(1), WV2_get_CanGoBack, 1, varptr(p1)) == 0 ){
		if ( p1 ){ mi(3) = 0 }
		else { mi(3) = 3 }
	}
	else { mi(3) = 3 }
	SetMenuItemInfo hMenu, 0, 1, varptr(mi)
	if ( CCall2(dpCtrl(1), WV2_get_CanGoForward, 1, varptr(p1)) == 0 ){
		if ( p1 ){ mi(3) = 0 }
		else { mi(3) = 3 }
	}
	else { mi(3) = 3 }
	SetMenuItemInfo hMenu, 1, 1, varptr(mi)
	DrawMenuBar hWnd0
	return

*TAB_GETINFO//情報収集
	sendmsg hTab, TCM_GETCURSEL, 0, 0 : iTab = stat
	gosub *TAB_GETINFO2
	return

*TAB_GETINFO2//上に同じく
	pTabInfo = 0
	if ( iTab == -1 ){ return }
	tci(0) = 8 : sendmsg hTab, TCM_GETITEMA, iTab, varptr(tci)
	if ( stat == 0 ){ return }
	pTabInfo = tci(6)
	dupptr dpCtrl, WV2_DATA_SIZE * 28 + pTabInfo, 8, 4
	return

*TAB_SELECT//タブ切り替え
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo == 0 ){ return }
	pView = -1 : gosub *TAB_UPDATE
	gosub *WM_SIZE
	ret = CCall2(dpCtrl, WV2Ctrl_put_IsVisible, 1, 1)
	return

*TAB_UPDATE//タブ切り替えたときにページを移す
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo == 0 ){ return }
	gosub *MENU_UPDATE
	if ( CCall2(dpCtrl(1), WV2_get_DocumentTitle, 1, varptr(p1)) == 0 ){
		if ( pView == -1 || pView == dpCtrl(1) ){ SetWindowTextW hWnd0, p1 }
		tci(0) = 1 : tci(3) = p1
		sendmsg hTab, TCM_SETITEMW, iTab, varptr(tci)
		CoTaskMemFree p1
	}
	if ( pView == -1 || pView == dpCtrl(1) ){
		if ( CCall2(dpCtrl(1), WV2_get_Source, 1, varptr(p1)) == 0 ){
			SetWindowTextW hEditUrl, p1
			CoTaskMemFree p1
		}
	}
	gosub *WM_STBAR
	return

*TAB_ADD//タブ追加
	if ( bAdd ){ return }
	bAdd = 1
	gosub *TAB_ADD2
	gosub *EVENT_SET
	gosub *TAB_SELECT
	bufTmp = DEF_URL
	SetWindowTextA hEditUrl, varptr(bufTmp)
	gosub *CMD_NAVIGATE
	bAdd = 0
	return

*TAB_ADD2//同じく
	gosub *TAB_GETINFO
	if ( pTabInfo ){
		ret = CCall2(dpCtrl, WV2Ctrl_put_IsVisible, 1, 0)
	}
	sendmsg hTab, TCM_GETITEMCOUNT, 0, 0 : iTab = stat
	tci(0) = 9 : tci(6) = 0
	bufTmp = "" : tci(3) = varptr(bufTmp)
	sendmsg hTab, TCM_INSERTITEMA, iTab, varptr(tci)
	sendmsg hTab, TCM_SETCURSEL, iTab, 0
	curCtrl = WebView2_CreateCtrl(pEnv, hWnd0)
	curView = WebView2_GetView(curCtrl)
	if ( curCtrl == 0 || curView == 0 ){
		gosub *TAB_DEL
		return
	}
	return

*TAB_DEL//タブ削除
	sendmsg hTab, TCM_GETITEMCOUNT, 0, 0
	if ( stat <= 1 ){ return }
	if ( bDel ){ return }
	bDel = 1
	gosub *TAB_GETINFO2
	if ( pTabInfo == 0 ){ return }
	ret = CCall2(dpCtrl(0), WV2Ctrl_Close, 0)
	WebView2_Release dpCtrl(1)
	WebView2_Release dpCtrl(0)
	HeapFree GetProcessHeap(), 0, pTabInfo
	sendmsg hTab, TCM_DELETEITEM, iTab, 0
	if ( iTab ){ iTab-- }
	sendmsg hTab, TCM_SETCURSEL, iTab, 0
	gosub *TAB_SELECT
	bDel = 0
	return

*EVENT_TITLE//名前変更
	gosub *EVENT_URL
	pView = wparam : gosub *TAB_UPDATE
	return

*EVENT_COMPLETE//いろいろ
	gosub *EVENT_URL
	pView = wparam : gosub *TAB_UPDATE
	return

*EVENT_FULLSCR//最大化した時の処理。
//下の奴をコメントアウトやめると、Youtubeで全画面表示しても画面全体に広がらなくなる
//	return
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo == 0 ){ return }
	if ( dpCtrl(1) != wparam ){ return }
	if ( CCall2(dpCtrl(1), WV2_GetFullScreen, 1, varptr(p1)) ){ return }
	if ( p1 ){
		ShowWindow hEditUrl, 0
		ShowWindow hTab, 0
		wndInfo(0) = GetWindowLong(hWnd0, -20)
		wndInfo(1) = GetWindowLong(hWnd0, -16)
		wndInfo(2) = GetMenu(hWnd0)
		SetMenu hWnd0, 0
		if ( WebView2_GetWndRect(hWnd0, rc) == 0 ){ return }
		wndInfo(3) = rc(0), rc(1), rc(2), rc(3)
		SetWindowLong hWnd0, -20, 0
		SetWindowLong hWnd0, -16, wndInfo(1) & 0xff000000
		if ( WebView2_GetMonitorRect(hWnd0, rc) == 0 ){ return }
		SetWindowPos hWnd0, -1, rc(0), rc(1), rc(2), rc(3), 0x220
	}
	else {
		ShowWindow hEditUrl, 5
		ShowWindow hTab, 5
		SetWindowLong hWnd0, -20, wndInfo(0)
		SetWindowLong hWnd0, -16, wndInfo(1)
		if ( wndInfo(2) ){ SetMenu hWnd0, wndInfo(2) }
		if ( wndInfo(0) & 0x8 ){ p1 = -1 } else { p1 = -2 }
		SetWindowPos hWnd0, p1, wndInfo(3), wndInfo(4), wndInfo(5), wndInfo(6), 0x220
		ShowWindow hWnd0, 1
	}
	return

*EVENT_NEWWND//タブ追加
	gosub *EVENT_URL
	if ( lparam == 0 || bAdd != 0 ){ return }
	bAdd = 1
	pNewWnd = lparam
	if ( CCall2(pNewWnd, WV2NewWnd_GetDeferral, 1, varptr(pDef)) == 0 ){
		PostMessage hWnd0, 0x9004, 0, 0
		bAdd = 1
	}
	return

*EVENT_NEWWND2//タブ追加
	gosub *EVENT_URL
	if ( CCall2(pNewWnd, WV2NewWnd_put_Handled, 1, 1) == 0 ){
		if ( CCall2(pNewWnd, WV2NewWnd_get_Uri, 1, varptr(p1)) == 0 ){
			gosub *TAB_ADD2
			ret = CCall2(pNewWnd, WV2NewWnd_put_NewWindow, 1, curView)
			gosub *EVENT_SET
			gosub *TAB_SELECT
		}
	}
	ret = CCall2(pDef, WV2Deferral_Complete, 0)
	WebView2_Release pDef
	bAdd = 0
	return

*EVENT_SET//タブ移動
	pTabInfo = 0
	pTabInfo = HeapAlloc(GetProcessHeap(), 8, WV2_DATA_SIZE * 28 + 8)
	if ( pTabInfo == 0 ){ return }
	dupptr dp, pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_TITLECHANGED, hWnd0, 0x9000, dp
	ret = CCall2(curView, WV2_add_DocumentTitleChanged, 2, dp, varptr(dp(6)))

	dupptr dp, WV2_DATA_SIZE * 4 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_NAVIGATIONCOMPLETED, hWnd0, 0x9001, dp
	ret = CCall2(curView, WV2_add_NavigationCompleted, 2, dp, varptr(dp(6)))

	dupptr dp, WV2_DATA_SIZE * 8 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_FULLSCREEN, hWnd0, 0x9002, dp
	ret = CCall2(curView, WV2_add_FullScrChanged, 2, dp, varptr(dp(6)))

	dupptr dp, WV2_DATA_SIZE * 12 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_NEWWINDOW, hWnd0, 0x9003, dp
	ret = CCall2(curView, WV2_add_NewWindowRequested, 2, dp, varptr(dp(6)))

	dupptr dpCtrl, WV2_DATA_SIZE * 28 + pTabInfo, 8, 4
	dpCtrl(0) = curCtrl, curView

	tci(0) = 8 : tci(6) = pTabInfo
	sendmsg hTab, TCM_SETITEMW, iTab, varptr(tci)
	return

*CMD_BACK//戻る
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo ){ ret = CCall2(dpCtrl(1), WV2_get_GoBack, 0) }
	return

*CMD_FORWARD//進む
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo ){ ret = CCall2(dpCtrl(1), WV2_get_GoForward, 0) }
	return

*CMD_RELOAD//読み込みなおし
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo ){ ret = CCall2(dpCtrl(1), WV2_Reload, 0) }
	return

*CMD_NAVIGATE//移動
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	tmp="false"//この辺の「instr」のやつは、URLなのか文字検索なのかを判定するやつ
	if instr(bufTmp,0,"https://")=0{tmp="true"}
	if instr(bufTmp,0,"http://")=0{tmp="true"}
	if instr(bufTmp,0,"edge://")=0{tmp="true"}
	if instr(bufTmp,0,"file://")=0{tmp="true"}
	if instr(bufTmp,0,"mailto://")=0{tmp="true"}
	if instr(bufTmp,0,"ftp://")=0{bufTmp="https://"+bufTmp:tmp="true"}
	if instr(bufTmp,0,"ftps://")=0{bufTmp="https://"+bufTmp:tmp="true"}
	if instr(bufTmp,0,"sftp://")=0{bufTmp="https://"+bufTmp:tmp="true"}
	if tmp="true"{//URL
		GetWindowTextW hEditUrl, varptr(bufTmp), p1
		ret = CCall2(dpCtrl(1), WV2_Navigate, 1, varptr(bufTmp))//このコマンドでページを移動する！
	}else{//文字だったとき
		bufTmp= "https://www.bing.com/search?q="+bufTmp//この辺の奴でもページを移動できる！
		SetWindowTextA hEditUrl, varptr(bufTmp)
		gosub *CMD_NAVIGATE
	}
	return
	
*EVENT_URL//URL
	if ( pTabInfo == 0 ){ return }
	p1 = (GetWindowTextLengthW(hEditUrl) + 1) * 2
	sdim bufTmp, p1
	GetWindowText hEditUrl, varptr(bufTmp), p1
	urlTmp = bufTmp
//	if instr(urlTmp,0,"https://www.youtube.com")=0{exit} //これは検閲の例。コメントアウトを外すと、Youtubeを見れなくなる
	return

*CMD_NEW_TAB//タブ増やす
	gosub *TAB_ADD
	return

*CMD_CLONE_TAB//タブを複製する
	gosub *EVENT_URL
	if ( pTabInfo == 0 ){ return }
	p1 = (GetWindowTextLengthW(hEditUrl) + 1) * 2
	sdim bufTmp, p1
	GetWindowText hEditUrl, varptr(bufTmp), p1
	NOW_DEF_URL = DEF_URL
	DEF_URL = bufTmp
	gosub *TAB_ADD
	DEF_URL = NOW_DEF_URL
	return

*CMD_DEL_TAB//けす
	gosub *TAB_DEL
	return

*CMD_ABOUT
	dialog BrowserName
	return
*CMD_CAPTURE
	gosub *EVENT_URL
	dialog "ページをスクショしましょう(著作権に注意)\nPNG(画像)は「はい」/PDFは「いいえ」を押してください\n次で×を押せばキャンセルできます",2,"キャプチャ"
		if stat=6{gosub *CMD_CAPTURE1}else{gosub *CMD_CAPTURE2}
	return

*CMD_CAPTURE1
	dialog "png", 17
	if ( stat == 0 ){ return }
	if ( SHCreateStreamOnFileEx(refstr, 0x1002, 0x80, 1, 0, p1) ){ return }
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	dupptr dp, WV2_DATA_SIZE * 20 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_CAPTURE, hWnd0, 0, dp
	ret = CCall2(dpCtrl(1), WV2_CapturePreview, 3, 0, p1, dp)
	WebView2_EventWait dp
	WebView2_Release p1
	dialog "PNG画像で保存★できた"
	return

*CMD_CAPTURE2
	if ( bPDF ){ return }
	dialog "pdf", 17
	if ( stat == 0 ){ return }
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	bPDF = 1
	mi(1) = 1 : mi(3) = 3
	dupptr dp, WV2_DATA_SIZE * 24 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_PRINTTOPDF, hWnd0, 0x9005, dp
	sdim bufTmp, (strlen(refstr) + 1) * 2
	cnvstow bufTmp, refstr
	ret = CCall2(dpCtrl(1), WV2_PrintToPdf, 3, varptr(bufTmp), 0, dp)
	dialog "PDFで保存★できた"
	return

*CMD_DOWNLOAD//ダウンロード履歴開くか開かないか
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	if ( CCall2(dpCtrl(1), WV2_IsDownloadDialogOpen, 1, varptr(p1)) ){ return }
	if ( p1 ){ p1 = WV2_CloseDownloadDialog } else { p1 = WV2_OpenDownloadDialog }
	ret = CCall2(dpCtrl(1), p1, 0)
	return

*WM_SIZE//サイズ変更
	gosub *EVENT_URL
	GetClientRect hWnd0, varptr(rc)
	if ( IsWindowVisible(hEditUrl) ){
		MoveWindow hEditUrl, 8, 0, rc(2) - 16, 20, 0
		MoveWindow hTab, 0, 20, rc(2), 24, 0
		p1 = 44
	}
	else { p1 = 0 }
	gosub *TAB_GETINFO
	if ( pTabInfo ){
		WebView2_Size dpCtrl(0), 0, p1, rc(2), rc(3)-25
	}
	gosub *WM_STBAR
	return

*WM_STBAR//下の文字列
	gosub *EVENT_URL
	if ( pTabInfo == 0 ){ return }
	p1 = (GetWindowTextLengthW(hEditUrl) + 1) * 2
	sdim bufTmp, p1
	GetWindowText hEditUrl, varptr(bufTmp), p1
	STBarURL = bufTmp
	stbar_resize
	stbar_text BrowserName+" "+BrowserVersion+" | タブ:"+(iTab+1)+" | URL : "+STBarURL
	return

*WM_CLOSE//なんだったっけこれ、とりあえず弄るな
	sendmsg hTab, TCM_GETITEMCOUNT, 0, 0
	repeat stat
		iTab = cnt : gosub *TAB_DEL
	loop
	WebView2_Release pEnv
	if ( hMenu ){ DestroyMenu hMenu }
	return

*WM_NOTIFY//弄るな
	if ( lparam == 0 ){ return }
	dupptr dpHdr, lparam, 12, 4
	if ( dpHdr(0) == hTab ){
		if ( dpHdr(2) == -552 ){
			sendmsg hTab, TCM_GETCURSEL, 0, 0
			if ( stat == -1 ){ return }
			iTab = stat : gosub *TAB_GETINFO2
			if ( pTabInfo == 0 ){ return }
			ret = CCall2(dpCtrl(0), WV2Ctrl_put_IsVisible, 1, 0)
		}
		if ( dpHdr(2) == -551 ){
			gosub *TAB_SELECT
			return
		}
		if ( dpHdr(2) == -5 ){
			dim tchi, 3
			GetCursorPos varptr(tchi)
			ScreenToClient hTab, varptr(tchi)
			sendmsg hTab, TCM_HITTEST, 0, varptr(tchi)
			if ( stat == -1 ){ return }
			iTab = stat : gosub *TAB_DEL
			return
		}
	}
	return

*WM_COMMAND//弄るな
	if ( lparam == 0 && (wparam >> 16) == 0 ){
		id = wparam & 0xffff
		if ( id < 0x8000 || id >= (0x8000 + length(lbCmd)) ){ return }
		gosub lbCmd(id - 0x8000)
	}
	return

*ABOUT
	LoadIcon hinstance, 128
	ShellAbout hwnd, BrowserName+"#"+BrowserName+" "+BrowserVersion, "このブラウザは誰でもソースコードを弄って構いませんが、\ncore.hspとWebView2Loader.dllには触らないでね", stat
	return
	
*Exit
gsel 0,-1
end